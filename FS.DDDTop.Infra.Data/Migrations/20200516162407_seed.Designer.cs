// <auto-generated />
using System;
using FS.DDDTop.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FS.DDDTop.Infra.Data.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20200516162407_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FS.DDDTop.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Ativo = true,
                            DataCadastro = new DateTime(2020, 5, 16, 13, 24, 7, 270, DateTimeKind.Local).AddTicks(62),
                            Email = "flavio@email.com",
                            Nome = "Flavio",
                            Sobrenome = "Spedaletti"
                        });
                });

            modelBuilder.Entity("FS.DDDTop.Domain.Entities.Reclamacao", b =>
                {
                    b.Property<int>("ReclamacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("Resolvida")
                        .HasColumnType("bit");

                    b.HasKey("ReclamacaoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Reclamacoes");

                    b.HasData(
                        new
                        {
                            ReclamacaoId = 1,
                            ClienteId = 1,
                            Descricao = "Internet lenta",
                            Resolvida = false
                        },
                        new
                        {
                            ReclamacaoId = 2,
                            ClienteId = 1,
                            Descricao = "Sinal da TV caiu",
                            Resolvida = true
                        });
                });

            modelBuilder.Entity("FS.DDDTop.Domain.Entities.Reclamacao", b =>
                {
                    b.HasOne("FS.DDDTop.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Reclamacoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
